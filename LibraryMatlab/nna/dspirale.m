% DSPIRALE Distinction entre deux spiralesclf;figure(gcf)echo on%    ==========================================================%    SPIRALE        %    ==========================================================%    INITFF   - Inititializes feed-forward networks up to 3 layers.%    TRAINBPX - Trains a feed-forward network with faster backpropagation.%    SIMUFF    - Simulates feed-forward networks up to 3 layers.%    NONLINEAR SYSTEM IDENTIFICATION:%    Using the above functions a feed-forward network is trained%    to distinguish between two spirals.pause % Strike any key to continue...%    DEFINING THE MODEL PROBLEM%    ==========================echo offSpiral1=[];Spiral2=[];for i=1:1:32	angle=i*pi/12;	radius=0.5*(33-i)/33;	x=radius*sin(angle);	y=radius*cos(angle);	Spiral1=[Spiral1;0.5+x,0.5+y,1];	Spiral2=[Spiral2;-(x-0.5),-(y-0.5),0];endX1=Spiral1(:,1);Y1=Spiral1(:,2);X0=Spiral2(:,1);Y0=Spiral2(:,2);plot(X1,Y1,X0,Y0,'--'),title('Deux spirales a classifier'),xlabel('x'),ylabel('y');Spiral=[Spiral2;Spiral1];echo on% Training vectorsspirales=Spiral(:,1:2)';targets=Spiral(:,3)';[R,Q]=size(spirales);  % Structure d'entree et de sortie du RNA[S2,Q]=size(targets);pause % Strike any key to define the network...%    DEFINING THE NETWORK%    ====================%    The spiral network will have x %    neurons in its hidden layer.S1 = 5;        % Nombre d'unites cacheesnet =newff(minmax(spirales),[S1 S2],{'logsig' 'logsig'},'traingdm');net.LW{2,1} = net.LW{2,1}*0.01;net.b{2} = net.b{2}*0.01;pause % Strike any key to train the network...%    TRAINING THE NETWORK WITHOUT NOISE%    ==================================net.performFcn = 'sse';         % Sum-Squared Error performance functionnet.trainParam.goal = 0.1;      % Sum-squared error goal.net.trainParam.show = 1000;     % Frequency of progress displays (in epochs).net.trainParam.epochs = 10000;  % Maximum number of epochs to train.net.trainParam.mc = 0.9;        % Momentum constant.net.trainParam.lr=0.15;         % Learning rate%    Training begins...please wait...P = spirales;T = targets;[net,tr] = train(net, P, T);%    ...and finally finishes.% PERFORM THE TESTA = sim(net,P);AA = hardlim(A-0.5);            % Seuil de decision entre les deux courbeserrors1 = sum(abs(AA-T));errors1   % Nombre de vecteurs non apprisecho offdisp('End of DSPIRALE') 